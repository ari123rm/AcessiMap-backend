# src/feat/Usuarios/usuario.docs.yaml

components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [user, admin]
      example:
        id: 10
        nome: "João da Silva"
        email: "joao@email.com"
        role: "user"

    NovoUsuario:
      type: object
      required: [nome, email, senha]
      properties:
        nome:
          type: string
        email:
          type: string
          format: email
        senha:
          type: string
          format: password
      example:
        nome: "Maria Oliveira"
        email: "maria@email.com"
        senha: "senhaSegura123"

    Login:
      type: object
      required: [email, senha]
      properties:
        email:
          type: string
          format: email
        senha:
          type: string
          format: password
      example:
        email: "maria@email.com"
        senha: "senhaSegura123"

    Token:
      type: object
      properties:
        token:
          type: string
          description: Token de autenticação JWT.
      example:
        token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

tags:
  - name: Usuarios
    description: Autenticação e gerenciamento de usuários.

paths:
  /api/usuarios/register:
    post:
      summary: Registra um novo usuário
      tags: [Usuarios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoUsuario'
      responses:
        '201':
          description: Usuário criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '409':
          description: Conflito, o email já está em uso.

  /api/usuarios/login:
    post:
      summary: Autentica um usuário e retorna um token JWT
      tags: [Usuarios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Login bem-sucedido.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          description: Não autorizado, email ou senha inválidos.

  /api/usuarios/me:
    get:
      summary: Retorna as informações do usuário autenticado (Rota Protegida)
      tags: [Usuarios]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Perfil do usuário.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '401':
          description: Não autorizado.